// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @default(autoincrement()) @id
  email      String    @unique //unica
  name       String? //opcional
  password   String
  createdAt  DateTime  @default(now()) //padrão de quando foi criado (data atual)
  updatedAt  DateTime  @updatedAt //padrão de quando foi atualizado  (data atual atuaização)
  questions   Questions[]  //várias perguntas
  answers    Answers[] //várias respostas
}

model Questions {
  id         Int    @default(autoincrement()) @id
  title      String  
  body       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId     Int  //vai existir na tabela como chave estrangeira de user
  //relação de tabelas
  user       User      @relation(fields: [userId], references: [id]) 
  answers    Answers[] //cada questão pode ter várias respostas 1 pra N
}

model Answers {
  id         Int    @default(autoincrement()) @id
  body       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId     Int  //vai existir na tabela como chave estrangeira de user
  questionId Int  //vai existir na tabela como chave estrangeira de question
  user       User      @relation(fields: [userId], references: [id])
  question   Questions @relation(fields: [questionId], references: [id])
}